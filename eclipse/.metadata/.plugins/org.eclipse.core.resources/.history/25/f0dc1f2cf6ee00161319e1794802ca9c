package zappos;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

	public class solution1 {

		/*public static List splitAndGiveList(String number){
		int length=number.length();
		List list=new ArrayList();
		for(int i=0;i<length;i++){
		String newNum=number.substring(0,i)+number.substring(i+1,length);
		list.add(Integer.parseInt(newNum));
		}
		Collections.sort(list);
		return list;
		}

		public static void findLeast(String number,int noOfDigit){
		int leastNo=0;
		for(int i=0;i<noOfDigit;i++){
		leastNo=(int) splitAndGiveList(number).get(0);
		number=Integer.toString(leastNo);
		}
		System.out.println(leastNo);
		}
		*//**
		* @param args
		*//*
		**/
		public static void main(String[] args) {
		findLeast(746209249,5);

		}

		
		
		public static int findLeast(int inputNo, int noOfDigitsToDelete)
		{
		String s = Integer.toString(inputNo);
		int[] digits = new int[10];
		char[] s_char = s.toCharArray();
		for(char ch : s_char){
			digits[Character.getNumericValue(ch)] = digits[Character.getNumericValue(ch)] + 1;
		}

		var output = 0;
		var cnt = s.Length - noOfDigitsToDelete;
		for (int i = 0; i < digits.Length; i++)
		{
		for (int j = 0; j < digits[i] && cnt > 0; j++)
		{
		cnt--;
		output = output * 10 + i;
		}

		if (cnt == 0) break;
		}

		return output;
		}
		
		
		
		}
	
	
	
